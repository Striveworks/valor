apiVersion: v1
# Kind for volume chain
kind: PersistentVolume
metadata:
  # Name the persistent chain
  name: velour-persistent-volume
  # Labels for identifying PV
  labels:
    type: local
    app: velour
spec:
  storageClassName: manual
  capacity:
    # PV Storage capacity
    storage: 8Gi
  # A db can write and read from volumes to multiple pods
  accessModes:
    - ReadWriteMany
  # Specify the path to persistent the volumes
  hostPath:
    path: "/data/db"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-persistent-volume-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-secret-credentials
  labels:
    app: velour
data:
  POSTGRES_DB: velour
  POSTGRES_USER: user
  POSTGRES_PASSWORD: password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: velour
spec:
  replicas: 3
  selector:
    matchLabels:
      app: velour
  template:
    metadata:
      labels:
        app: velour
    spec:
      containers:
        - name: postgresdb
          image: postgis/postgis
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: db-secret-credentials
          volumeMounts:
            - mountPath: /var/lib/postgres/data
              name: db-data
        - name: redis
          image: redis
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /var/lib/redis/data
              name: db-data
        - name: api
          image: velour-api
          imagePullPolicy: Never
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-persistent-volume-claim
---
apiVersion: v1
# Kind for service
kind: Service
metadata:
  # Name your service
  name: postgresdb
  labels:
    app: velour
spec:
  # Choose how to expose your service
  type: NodePort
  ports:
    # The port number to expose the service
    - port: 30080
    #5432
  # Pod to route service traffic
  selector:
    app: velour
---
apiVersion: v1
# Kind for service
kind: Service
metadata:
  # Name your service
  name: redis
  labels:
    app: velour
spec:
  # Choose how to expose your service
  type: NodePort
  ports:
    # The port number to expose the service
    - port: 6379
  # Pod to route service traffic
  selector:
    app: velour